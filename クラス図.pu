@startuml minikuraft
abstract class GameObject {
    + void initiate()
    + void update()
    + void render()
}

class Game {
    - Button startButton
    - World world
    - Player player
    + void start()
}

class Button {
    - float x
    - float y
    - float width
    - float height
    - String label
    - boolean isHovered
    + void render()
    + boolean isClicked(double mouseX, double mouseY)
    + void setHovered(boolean isHovered)
}

class World {
    - List<Block> blocks
    - List<Enemy> enemies
    + void generate()
    + void update()
    + void render()
}

class Block extends Item {
    - String type
    - Collider collider
    + void Break()
    + void Place()
    + void render()
    + boolean checkCollision(Collider other)
}

class Item extends GameObject {
    - String id
    + void use()
}

class Collider {
    - int x
    - int y
    - int z
    - int width
    - int height
    - int depth
    + boolean intersects(Collider other)
}

abstract class Mob extends GameObject {
    - String id
    - String name
    - int attack
    - int x
    - int y
    - int z
    - int hp
    - Collider collider
    + void move()
    + void attack()
    + void hit()
    + boolean checkCollision(Collider other)
}

class Player extends Mob {
    - List<Item> inventory
    + void jump()
    + void collectItem(Item item)
    + void collectBlock(Block block)
}

class Enemy extends Mob {
    + void patrol()
}

Game --> World
Game --> Player
Game --> Button
World --> Block
World --> Enemy
Block --> Collider
Mob --> Collider
Player --> Item
@enduml